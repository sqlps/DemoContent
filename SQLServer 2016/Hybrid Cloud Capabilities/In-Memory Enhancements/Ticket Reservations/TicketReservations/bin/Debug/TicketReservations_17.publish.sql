/*
Deployment script for TicketReservations

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TicketReservations"
:setvar DefaultFilePrefix "TicketReservations"
:setvar DefaultDataPath "F:\DATA\"
:setvar DefaultLogPath "F:\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[TicketReservationDetail]...';


GO
CREATE TABLE [dbo].[tmp_ms_xx_TicketReservationDetail] (
    [TicketReservationID]       BIGINT          NOT NULL,
    [TicketReservationDetailID] BIGINT          IDENTITY (1, 1) NOT NULL,
    [Quantity]                  INT             NOT NULL,
    [FlightID]                  INT             NOT NULL,
    [Comment]                   NVARCHAR (1000) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TicketReservationDetail] PRIMARY KEY NONCLUSTERED ([TicketReservationDetailID] ASC)
)
WITH (MEMORY_OPTIMIZED = ON);


GO
IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TicketReservationDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TicketReservationDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TicketReservationDetail] ([TicketReservationID], [TicketReservationDetailID], [Quantity], [FlightID], [Comment])
        SELECT [TicketReservationID],
               [TicketReservationDetailID],
               [Quantity],
               [FlightID],
               [Comment]
        FROM   [dbo].[TicketReservationDetail];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TicketReservationDetail] OFF;
    END


GO
DROP TABLE [dbo].[TicketReservationDetail];


GO
CREATE TABLE [dbo].[TicketReservationDetail] (
    [TicketReservationID]       BIGINT          NOT NULL,
    [TicketReservationDetailID] BIGINT          IDENTITY (1, 1) NOT NULL,
    [Quantity]                  INT             NOT NULL,
    [FlightID]                  INT             NOT NULL,
    [Comment]                   NVARCHAR (1000) NULL,
    CONSTRAINT [PK_TicketReservationDetail] PRIMARY KEY NONCLUSTERED ([TicketReservationDetailID] ASC)
)
WITH (MEMORY_OPTIMIZED = ON);


GO
IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tmp_ms_xx_TicketReservationDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[TicketReservationDetail] ON;
        INSERT INTO [dbo].[TicketReservationDetail] ([TicketReservationID], [TicketReservationDetailID], [Quantity], [FlightID], [Comment])
        SELECT [TicketReservationID],
               [TicketReservationDetailID],
               [Quantity],
               [FlightID],
               [Comment]
        FROM   [dbo].[tmp_ms_xx_TicketReservationDetail];
        SET IDENTITY_INSERT [dbo].[TicketReservationDetail] OFF;
    END


GO
DROP TABLE [dbo].[tmp_ms_xx_TicketReservationDetail];


GO
PRINT N'Creating [dbo].[InsertReservationDetails]...';


GO
/*
CREATE PROCEDURE InsertReservationDetails(@TicketReservationID int, @LineCount int, @Comment NVARCHAR(1000), @FlightID int)
AS
BEGIN
	DECLARE @loop int = 0;
	WHILE (@loop < @LineCount)
	BEGIN
		INSERT INTO dbo.TicketReservationDetail (TicketReservationID, Quantity, FlightID, Comment) 
			VALUES(@TicketReservationID, @loop % 8 + 1, @FlightID, @Comment);
		SET @loop += 1;
	END
END

*/

-- natively compiled version of the stored procedure:

CREATE PROCEDURE InsertReservationDetails(@TicketReservationID int, @LineCount int, @Comment NVARCHAR(1000), @FlightID int)
WITH NATIVE_COMPILATION, SCHEMABINDING
as
BEGIN ATOMIC WITH (TRANSACTION ISOLATION LEVEL=SNAPSHOT, LANGUAGE=N'English')


	DECLARE @loop int = 0;
	while (@loop < @LineCount)
	BEGIN
		INSERT INTO dbo.TicketReservationDetail (TicketReservationID, Quantity, FlightID, Comment) 
		    VALUES(@TicketReservationID, @loop % 8 + 1, @FlightID, @Comment);
		SET @loop += 1;
	END
END
GO
PRINT N'Refreshing [dbo].[Demo_Reset]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Demo_Reset]';


GO
PRINT N'Refreshing [dbo].[ReadMultipleReservations]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ReadMultipleReservations]';


GO
PRINT N'Update complete.';


GO

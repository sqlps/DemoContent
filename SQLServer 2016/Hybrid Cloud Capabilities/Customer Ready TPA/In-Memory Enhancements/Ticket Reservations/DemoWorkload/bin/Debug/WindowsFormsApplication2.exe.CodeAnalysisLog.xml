<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload\bin\Debug\DemoWorkload.exe">
   <Modules>
    <Module Name="demoworkload.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'DemoWorkload.exe' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'DemoWorkload.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="DemoWorkload">
       <Types>
        <Type Name="FrmConfig" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Frm' in type name 'FrmConfig'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#btnSave_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="35">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'FrmConfig.btnSave_Click(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="36">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'FrmConfig.btnSave_Click(object, EventArgs)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="44">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.btnSave_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="45">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.btnSave_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="46">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.btnSave_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="47">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.btnSave_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="48">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.btnSave_Click(object, EventArgs)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="49">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.btnSave_Click(object, EventArgs)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="50">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.btnSave_Click(object, EventArgs)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfigForm_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="23">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.ConfigForm_Load(object, EventArgs)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.cs" Line="24">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.ConfigForm_Load(object, EventArgs)' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="196">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "10000".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="296">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Configuration Settings".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="150">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Connection String".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="187">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Max Latch Time".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="168">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Max TPS (thousands)".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="64">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Reads per Write".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="118">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Requests per Thread".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="86">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Rows per Transaction".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="268">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Save Configuration Values".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="206">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Server Transactions".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="238">Method 'FrmConfig.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Threads".</Issue>
            </Message>
            <Message Id="System.Int64.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmConfig.Designer.cs" Line="177">Because the behavior of 'long.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmConfig.InitializeComponent()' with a call to 'long.ToString(IFormatProvider)'. If the result of 'long.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FrmMain" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Frm' in type name 'FrmMain'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#btnToggle_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="506">Method 'FrmMain.btnToggle_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Hide diagnostics".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="501">Method 'FrmMain.btnToggle_Click(object, EventArgs)' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Show diagnostics".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="509">Modify 'FrmMain.btnToggle_Click(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#configurationToolStripMenuItem_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="483">In method 'FrmMain.configurationToolStripMenuItem_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'cf' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="487">Modify 'FrmMain.configurationToolStripMenuItem_Click(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ErrorLock" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FrmMain.ErrorLock' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FrmMain_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="518">In method 'FrmMain.FrmMain_Load(object, EventArgs)', call System.IDisposable.Dispose on object 'host' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="529">Modify 'FrmMain.FrmMain_Load(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeComponent()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="31">In method 'FrmMain.InitializeComponent()', object 'chartArea1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chartArea1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="35">In method 'FrmMain.InitializeComponent()', object 'chartArea2' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chartArea2' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="38">In method 'FrmMain.InitializeComponent()', object 'chartArea3' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'chartArea3' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="34">In method 'FrmMain.InitializeComponent()', object 'dataPoint1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dataPoint1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="37">In method 'FrmMain.InitializeComponent()', object 'dataPoint2' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dataPoint2' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="40">In method 'FrmMain.InitializeComponent()', object 'dataPoint3' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dataPoint3' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="32">In method 'FrmMain.InitializeComponent()', object 'legend1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'legend1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="33">In method 'FrmMain.InitializeComponent()', object 'series1' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'series1' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="36">In method 'FrmMain.InitializeComponent()', object 'series2' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'series2' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="39">In method 'FrmMain.InitializeComponent()', object 'series3' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'series3' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="System.Windows.Forms.Control.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="117">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Baseline".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="431">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Blue Yonder Ticket Reservation Simulator".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="413">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Error Messages:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="316">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Increase in performance since last reset".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="329">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Show diagnostics ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="87">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Start".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="103">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Stop".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="304">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Transactions / sec".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="283">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Transactions/sec x1000".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="201">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "chart1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="364">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "chart1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="130">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "menuStrip1".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="216">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'Control.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "statusStrip1".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.ToolStripItem.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="228">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="240">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "0".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="145">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Configuration".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="222">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Elapsed Time:".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="152">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Exit".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="139">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Options".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.Designer.cs" Line="234">Method 'FrmMain.InitializeComponent()' passes a literal string as parameter 'value' of a call to 'ToolStripItem.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "Running Threads:".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnRunClick(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="246">Modify 'FrmMain.OnRunClick(object, EventArgs)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ShowThreadExceptionDialog(System.String,System.Exception)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="555">Method 'FrmMain.ShowThreadExceptionDialog(string, Exception)' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons, MessageBoxIcon)'. Retrieve the following string(s) from a resource table instead: "An application error occurred, \n\nStack Trace:\n".</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="555">Change 'FrmMain.ShowThreadExceptionDialog(string, Exception)' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StopLock" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'FrmMain.StopLock' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThreadMonitor()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="326">In method 'FrmMain.ThreadMonitor()', object 'conn' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'conn' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="322">In method 'FrmMain.ThreadMonitor()', call System.IDisposable.Dispose on object 'CPUCounter' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="343">In method 'FrmMain.ThreadMonitor()', call System.IDisposable.Dispose on object 'ConfigQuery' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="337">In method 'FrmMain.ThreadMonitor()', call System.IDisposable.Dispose on object 'Latchcmd' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="331">In method 'FrmMain.ThreadMonitor()', call System.IDisposable.Dispose on object 'Perfcmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="DemoWorkload.FrmMain.AddText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="356">Method 'FrmMain.ThreadMonitor()' passes a literal string as parameter 'text' of a call to 'FrmMain.AddText(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="405">Method 'FrmMain.ThreadMonitor()' passes a literal string as parameter 'text' of a call to 'FrmMain.AddText(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message Id="System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="362">Method 'FrmMain.ThreadMonitor()' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Error".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="362">Method 'FrmMain.ThreadMonitor()' passes a literal string as parameter 'text' of a call to 'MessageBox.Show(string, string, MessageBoxButtons)'. Retrieve the following string(s) from a resource table instead: "Monitor failed to connect to server.".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="352">Modify 'FrmMain.ThreadMonitor()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="401">Modify 'FrmMain.ThreadMonitor()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="NoNonLiterals" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="334">Review the query string passed to 'SqlCommand.CommandText.set(string)' in 'FrmMain.ThreadMonitor()' for possible SQL injection attacks. If the string is composed using any user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="NoNonLiterals" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="340">Review the query string passed to 'SqlCommand.CommandText.set(string)' in 'FrmMain.ThreadMonitor()' for possible SQL injection attacks. If the string is composed using any user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="NoNonLiterals" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="346">Review the query string passed to 'SqlCommand.CommandText.set(string)' in 'FrmMain.ThreadMonitor()' for possible SQL injection attacks. If the string is composed using any user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="356">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmMain.ThreadMonitor()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="405">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmMain.ThreadMonitor()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="444">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmMain.ThreadMonitor()' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="435">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'FrmMain.ThreadMonitor()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="328">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'FrmMain.ThreadMonitor()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="330">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'FrmMain.ThreadMonitor()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="341">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'FrmMain.ThreadMonitor()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.TimeSpan.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="447">Because the behavior of 'TimeSpan.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FrmMain.ThreadMonitor()' with a call to 'TimeSpan.ToString(string, IFormatProvider)'. If the result of 'TimeSpan.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="362">Change 'FrmMain.ThreadMonitor()' to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ThreadWorker(System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="258">In method 'FrmMain.ThreadWorker(object)', object 'conn' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'conn' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="269">In method 'FrmMain.ThreadWorker(object)', call System.IDisposable.Dispose on object 'ReadCmd' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="261">In method 'FrmMain.ThreadWorker(object)', call System.IDisposable.Dispose on object 'WriteCmd' before all references to it are out of scope.</Issue>
            </Message>
            <Message Id="DemoWorkload.FrmMain.AddText(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="301">Method 'FrmMain.ThreadWorker(object)' passes a literal string as parameter 'text' of a call to 'FrmMain.AddText(string)'. Retrieve the following string(s) from a resource table instead: " ".</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="297">Modify 'FrmMain.ThreadWorker(object)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="272">The query string passed to 'SqlCommand.CommandText.set(string)' in 'FrmMain.ThreadWorker(object)' could contain the following variables 'MyTP.ReadCommandText'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="264">The query string passed to 'SqlCommand.CommandText.set(string)' in 'FrmMain.ThreadWorker(object)' could contain the following variables 'MyTP.WriteCommandText'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
            <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="301">Because the behavior of 'int.ToString()' could vary based on the current user's locale settings, replace this call in 'FrmMain.ThreadWorker(object)' with a call to 'int.ToString(IFormatProvider)'. If the result of 'int.ToString(IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateCount(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="87">Modify 'FrmMain.UpdateCount(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateCPUChart(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="119">Modify 'FrmMain.UpdateCPUChart(int)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateLatchChart(System.Int64)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="141">Modify 'FrmMain.UpdateLatchChart(long)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateResults(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="211">Modify 'FrmMain.UpdateResults(string)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateTPSChart(System.Int64)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="183">Modify 'FrmMain.UpdateTPSChart(long)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.Double.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="FrmMain.cs" Line="162">Because the behavior of 'double.ToString(string)' could vary based on the current user's locale settings, replace this call in 'FrmMain.UpdateTPSChart(long)' with a call to 'double.ToString(string, IFormatProvider)'. If the result of 'double.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="UIControls" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#speedDial" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="speed" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2016-06-22 23:17:05Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="C:\Demos\SQLServer 2016\Hybrid Cloud Capabilities\In-Memory Enhancements\Ticket Reservations\DemoWorkload" File="UIControls.cs" Line="24">Correct the casing of 'speed' in member name 'UIControls.speedDial' by changing it to 'Speed'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="NoNonLiterals">Review the query string passed to {0} in {1} for possible SQL injection attacks. If the string is composed using any user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMessageBoxOptions" Category="Microsoft.Globalization" CheckId="CA1300">
   <Name>Specify MessageBoxOptions</Name>
   <Description>In order to run correctly on right-to-left systems, all calls to MessageBox.Show should use the overload that specifies MessageBoxOptions as an argument. Programs should detect whether they are running on a right-to-left system at run-time and pass the appropriate MessageBoxOptions value in order to display correctly.</Description>
   <Resolution Name="Default">Change {0} to call the MessageBox.Show overload that specifies MessageBoxOptions, and make sure to set MessageBoxOptions.RightAlign and MessageBoxOptions.RtlReading if RightToLeft is set to RightToLeft.Yes on the parent control.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182191.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
